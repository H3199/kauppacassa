version: '3.3' # 2.4 is the last version that supports depends_on conditions for service health
networks:
  pub:  # docker network where all cassandra nodes will be put in
    driver: macvlan
    driver_opts:
      parent: enp5s0.101
    ipam:
      config:
        - subnet: "10.0.1.0/25"
          gateway: "10.0.1.126"
services:
  mars-cass1:
    image: cassandra:3.11.8   # better to use a specific version, if you want to control upgrades
    container_name: mars-cass1
    hostname: mars-cass1
    mem_limit: 2g  # It's not strictly required, but it's better to have some memory limit
    healthcheck:
        test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    networks:
        pub:
          ipv4_address: "10.0.1.21"

    ports:
      - "9042:9042"  # Expose native binary CQL port for your apps
    #  - "7000:7000"
    #  - "7001:7001"
    volumes:
      - ./data/cass1:/var/lib/cassandra    # This is the volume that will persist data for cass1 node
      - ./etc/cass1:/etc/cassandra   # Use your own config files for full control
    environment: &environment    # Declare and save environments variables into "environment"
        CASSANDRA_SEEDS: "10.0.1.11,10.0.1.21"    # The first two nodes will be seeds
        CASSANDRA_CLUSTER_NAME: SolarSystem
        CASSANDRA_DC: Mars
        CASSANDRA_RACK: West
        CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
        CASSANDRA_NUM_TOKENS: 128

  mars-cass2:
    image: cassandra:3.11.8
    container_name: mars-cass2
    hostname: mars-cass2
    mem_limit: 2g
    healthcheck:
        test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    networks:
      pub:
        ipv4_address: "10.0.1.22"
    ports:
      - "9043:9042"  # Expose native binary CQL port for your apps
    volumes:
      - ./data/cass2:/var/lib/cassandra    # This is the volume that will persist data for cass2 node
      - ./etc/cass2:/etc/cassandra    # Use your own config files for full control
    environment: *environment    # point to "environment" to use the same environment variables as cass1
    depends_on:
      mars-cass1:    # start cass2 only after cass1 is healthy
        condition: service_healthy

  mars-cass3:
    image: cassandra:3.11.8
    container_name: mars-cass3
    hostname: mars-cass3
    mem_limit: 2g
    healthcheck:
        test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    networks:
        pub:
          ipv4_address: "10.0.1.23"
    ports:
      - "9044:9042"  # Expose native binary CQL port for your apps
    volumes:
      - ./data/cass3:/var/lib/cassandra    # This is the volume that will persist data for cass3 node
      - ./etc/cass3:/etc/cassandra    # Use your own config files for full control
    environment: *environment    # point to "environment" to use the same environment variables as cass1
    depends_on:
      mars-cass2:
        condition: service_healthy
